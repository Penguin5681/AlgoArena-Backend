version: '3.8'
# Gareeb laptop isse na chalaye, gote phatt jaayenge
services:
  # PostgreSQL Database
  postgres:
    image: postgres:16.9
    container_name: postgres_db
    environment:
      POSTGRES_DB: rds_clone
      POSTGRES_USER: penguin
      POSTGRES_PASSWORD: 02022005
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U penguin -d rds_clone"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend_app
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      NODE_ENV: development
      PORT: 5001  
      JWT_SECRET: SJKHKL2393481BLZKAKDSABJ43HKLJ
      DEV_DB_URL: postgres://penguin:02022005@postgres:5432/rds_clone
      FIREBASE_SERVICE_ACCOUNT_PATH: src/firebase/algo-arena-85b81-10353b00437f.json
      KAFKA_BROKER: kafka:29092
      KAFKA_CLIENT_ID: code-compiler
      KAFKA_GROUP_ID: code-compiler-group
      CODE_EXECUTION_TIMEOUT: 10000
      MAX_CODE_SIZE: 100000
    ports:
      - "5001:5001"  
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
    networks:
      - app-network
    command: npx nodemon src/index.ts
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge